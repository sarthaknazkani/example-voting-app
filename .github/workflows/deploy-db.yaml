name: Deploy DB
run-name: Deployment ðŸš€ on branch ${{ github.head_ref || github.ref_name }} by @${{ github.actor }}
on:
  workflow_dispatch:

jobs:

  deploy-db:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Update helm chart
        env:
          GCR_IMAGE: ghcr.io/${{ github.repository_owner }}
          TOKEN: ${{ secrets.GH_TOKEN }}
        working-directory: ./_k8s
        run: |
          until (echo $TOKEN | helm registry login ${{ env.GCR_IMAGE }} --username ${{ github.repository_owner }} --password-stdin ); do echo "helm login issue, retrying in 10 sec" && sleep 10; done
          helm dependency update
          helm registry logout ${{ env.GCR_IMAGE }}
        shell: bash

      - name: Save chart
        working-directory: ./_k8s
        run: |
          echo folder content
          ls -l
          helm package . --version v0.1


      - name: Push Chart to Dockerhub
        working-directory: ./_k8s
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | helm registry login registry-1.docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin 
          helm push tta-v0.1.tgz oci://registry-1.docker.io/sarthaknazkani
        shell: bash


      - name: Azure - Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


      - name: Log in AKS cluster
        run: |
          az aks get-credentials --resource-group baserg --name testakssarthak --admin
        shell: bash

      - name: Display k8s manifests via helm template
        run: |
          helm pull oci://registry-1.docker.io/sarthaknazkani/tta --version v0.1 -d ./charts --untar
          ls -la
          helm template tta ./charts/tta \
          -f <(cat ./charts/tta/values.yaml 2>/dev/null) \
          -f ./charts/tta/values-*.yaml \
          -f <(echo "${{ inputs.values }}") \
        shell: bash

        # - name: Deploy via helm upgrade
        #   run: |
        #     helm rollback ${{ inputs.helm-chart-name }} $(helm history ${{ inputs.helm-chart-name }} -n ${{ inputs.namespace }} | grep deployed | cut -d$'\t' -f 1) -n ${{ inputs.namespace }} || true

        #     helm upgrade ${{ inputs.helm-chart-name }} ./charts/${{ inputs.helm-chart-name }} \
        #     --debug \
        #     --install \
        #     -n ${{ inputs.namespace }} \
        #     -f <(cat ./charts/${{ inputs.helm-chart-name }}/values.yaml 2>/dev/null) \
        #     -f ./charts/${{ inputs.helm-chart-name }}/values-${{ inputs.environment }}.yaml \
        #     -f <(echo "${{ inputs.values }}") \
        #     --atomic \
        #     --cleanup-on-fail \
        #     --wait \
        #     --wait-for-jobs \
        #     --timeout ${{ inputs.timeout }} \
        #     --set namespace=${{ inputs.namespace }}
        #   shell: bash